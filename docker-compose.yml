services:
  # FastAPI
  app:
    build: 
      context: ./app
      dockerfile: docker/dev/Dockerfile
    working_dir: '/root/volume'
    tty: true
    volumes:
      - ./app/volume:/root/volume
    env_file:
      - ./app/.env
    ports:
      - 8000:8000
    extra_hosts: # linux環境の場合にhost.docker.internalでhost上にアクセスするために必要
      - "host.docker.internal:host-gateway"
    command: poetry run uvicorn app.main:app --reload --host=0.0.0.0
    networks:
      - backend

  # mkdocs
  docs:
    build:
      context: ./docs
      dockerfile: docker/dev/Dockerfile
    working_dir: '/root/volume'
    tty: true
    volumes:
      - ./docs/volume:/root/volume
      - ./app/volume/sample_db.sqlite3:/tmp/sample_db.sqlite3 # schemaspy用
    ports:
      - 8001:8000
    command: mkdocs serve
    networks:
      - backend

  # rdb
  rdb:
    build:
      context: ./rdb
      dockerfile: docker/dev/Dockerfile
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      # ストレージのマウント
      - ./rdb/data:/var/lib/postgresql/data
    command: ["postgres", "-c", "shared_preload_libraries=age"]
    networks:
      - backend

  # neo4j
  search:
    build:
      context: ./search
      dockerfile: docker/dev/Dockerfile
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/password
    volumes:
      - ./search/data:/data
    networks:
      - backend

networks:
  backend: