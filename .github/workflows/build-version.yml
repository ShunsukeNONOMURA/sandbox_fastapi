# gh pagesの更新
name: Build Version gh pages

on:
  push:
    branches-ignore:
      - gh-pages
    tags:
      - 'v*'

# 衝突更新対策
concurrency:
  group: gh-pages-deploy
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # 環境準備
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
      env:
        POETRY_HOME: /opt/poetry

    - name: Add Poetry to PATH
      run: echo "PATH=$PATH:/opt/poetry/bin" >> $GITHUB_ENV

    - name: Install dependencies with Poetry
      working-directory: ./app/volume
      run: |
        poetry install --no-root

    # 出力設定
    - name: Set output path from ref
      id: vars
      run: |
        if [[ "${GITHUB_REF}" == refs/heads/* ]]; then
          name="${GITHUB_REF#refs/heads/}"
        elif [[ "${GITHUB_REF}" == refs/tags/* ]]; then
          name="${GITHUB_REF#refs/tags/}"
        else
          name="unknown"
        fi
        root_dir="tmp_deploy"
        version_dir="$root_dir/versions/$name"

        echo "root_dir=$root_dir" >> "$GITHUB_OUTPUT"
        echo "version_dir=$version_dir" >> "$GITHUB_OUTPUT"
        echo "output_name=$name" >> "$GITHUB_OUTPUT"

    # redocビルド
    - name: Build ReDoc
      working-directory: ./app/volume
      run: |
        set -o allexport
        source ../.env_dev
        set +o allexport
        poetry run python build_redoc.py

    # pytest cov ビルド
    - name: Run Pytest and generate coverage report
      working-directory: ./app/volume
      run: |
        set -o allexport
        source ../.env_dev
        set +o allexport
        poetry run python3 ./migrate.py
        poetry run pytest --cov=app -v --cov-report=html

    # MkDocs 用 Poetry インストール
    - name: Install docs dependencies
      working-directory: ./docs/volume
      run: poetry install --no-root

    # MkDocs サイトビルド
    - name: Build MkDocs site
      working-directory: ./docs/volume
      run: poetry run mkdocs build

    # schemaspy (sqlite想定構成)
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install Graphviz (for SchemaSpy)
      run: sudo apt-get update && sudo apt-get install -y graphviz
    
    # schemaspy バイナリ追加
    - name: Download SchemaSpy and SQLite JDBC
      run: |
        mkdir -p /opt/schemaspy 
        curl -L -o /opt/schemaspy/schemaspy.jar "https://github.com/schemaspy/schemaspy/releases/download/v6.2.4/schemaspy-6.2.4.jar"
        curl -L -o /opt/schemaspy/sqlite-jdbc.jar "https://repo1.maven.org/maven2/org/xerial/sqlite-jdbc/3.45.1.0/sqlite-jdbc-3.45.1.0.jar"
        
    # ビルド用構成コピー
    - name: Copy SchemaSpy config files
      run: |
        mkdir -p /tmp
        cp app/volume/sample_db.sqlite3 /tmp/sample_db.sqlite3

    # schemaspy ビルド
    - name: Build Schemaspy
      working-directory: ./docs/volume
      run: java -jar /opt/schemaspy/schemaspy.jar -configFile schemaspy.properties

    # manual ビルド
    - name: Install pandoc
      run: |
        sudo apt-get update && sudo apt-get install -y pandoc
        sudo apt-get install -y texlive texlive-latex-extra texlive-fonts-recommended

    - name: Build manual (HTML and PDF)
      working-directory: ./docs/volume
      run: |
        mkdir -p manual-output
        # ファイル順番が重要なら ls順指定 or 明示リスト
        pandoc manual/*.md -o manual-output/manual.html --toc --toc-depth=2
        pandoc manual/*.md -o manual-output/manual.pdf --toc --toc-depth=2

    # pushファイル統合
    - name: Prepare deploy directory
      run: |
        VERSION_DIR="${{ steps.vars.outputs.version_dir }}"

        mkdir -p $VERSION_DIR/redoc
        mkdir -p $VERSION_DIR/htmlcov
        mkdir -p $VERSION_DIR/site
        mkdir -p $VERSION_DIR/schemaspy
        mkdir -p $VERSION_DIR/manual-html
        mkdir -p $VERSION_DIR/manual-pdf
        cp -r app/volume/docs/backend/* $VERSION_DIR/redoc/
        cp -r app/volume/htmlcov/* $VERSION_DIR/htmlcov/
        cp -r docs/volume/site/* $VERSION_DIR/site/
        cp -r docs/volume/schemaspy/* $VERSION_DIR/schemaspy/
        cp docs/volume/manual-output/manual.html $VERSION_DIR/manual-html/
        cp docs/volume/manual-output/manual.pdf $VERSION_DIR/manual-pdf/

    # gh-pages側の更新統合
    - name: Checkout gh-pages
      run: |
        git fetch origin gh-pages
        git checkout gh-pages

    - name: Generate index.html
      run: |
        OUT_DIR="${{ steps.vars.outputs.root_dir }}"
        bash ./generate-index.sh $OUT_DIR/index.html

    # push
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: tmp_deploy # 出力先ディレクトリ
        publish_branch: gh-pages
        force_orphan: false
        keep_files: true
        skip_dirty_check: true
